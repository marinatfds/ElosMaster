import * as React from 'react';
import api from "../config/endpoint";
import * as ROUTER from "../config/endpointRoutes";
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemAvatar from '@mui/material/ListItemAvatar';
import ListItemText from '@mui/material/ListItemText';
import Avatar from '@mui/material/Avatar';
import { AlertButton } from './alertButton';
import PopupAlerts from './alertPopup';

function refreshMessages(): MessageExample[] {

  return Array.from(new Array(5)).map(
    (element, index) => element = messageExamples[index],
  );
}

export default function AlertArea() {
  const ref = React.useRef<HTMLDivElement>(null);
  const [messages, setMessages] = React.useState(() => refreshMessages());
  const [showPopup, setShowPopup] = React.useState(false);

  React.useEffect(() => {
    api.get(ROUTER.GET_ALERTS).then(response => {
        setMessages(response.data);
    })
}, []);

  const onCreateAlert = React.useCallback(function(event) {
    event.preventDefault();
    const content = event.target.elements.alertContent.value;
    const item = {
          date: new Date(),
          content
      };
    postAlert(item);
    closePopup();
  }, []);

  const postAlert = (item: any) => {
    api.post(ROUTER.CREATE_ALERT, {
        Alert: item.content,
        DateTime: item.date.toISOString()
    }).then(response => {
        setMessages(prevMessages => [
            item,
            ...prevMessages
          ]);
    })
  }

  const openPopup = React.useCallback(function() {
      setShowPopup(true);
  }, []);

  const closePopup = React.useCallback(function() {
    setShowPopup(false);
  }, []);

  React.useEffect(() => {
    (ref.current as HTMLDivElement).ownerDocument.body.scrollTop = 0;
    setMessages(refreshMessages());
  }, [setMessages]);

  return (
    <Box sx={{ pb: 7 }} ref={ref}>
      <div className="alertButtonsAlign">
          Últimas notícias:
          <AlertButton onClick={openPopup}>Novo Alerta</AlertButton>
      </div>
      {showPopup && (
        <PopupAlerts onClose={closePopup} onSubmit={onCreateAlert} open={showPopup} />
      )}
      <CssBaseline />
      <List>
        {messages.map(({ DateTime, Alert, Person }, index) => (
          <ListItem button key={index + Person}>
            <ListItemAvatar>
              <Avatar alt="Profile Picture" src={Person} />
            </ListItemAvatar>
            <ListItemText primary={(new Date(DateTime)).toLocaleString()} secondary={Alert} />
          </ListItem>
        ))}
      </List>
    </Box>
  );
}

interface MessageExample {
  DateTime: string;
  Alert: string;
  Person: string;
}

const messageExamples: readonly MessageExample[] = [
  {
    DateTime: 'Brunch this week?',
    Alert: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    Person: '/static/images/avatar/5.jpg',
  },
  {
    DateTime: 'Birthday Gift',
    Alert: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    Person: '/static/images/avatar/1.jpg',
  },
  {
    DateTime: 'Recipe to try',
    Alert: 'I am try out this new BBQ recipe, I think this might be amazing',
    Person: '/static/images/avatar/2.jpg',
  },
  {
    DateTime: 'Yes!',
    Alert: 'I have the tickets to the ReactConf for this year.',
    Person: '/static/images/avatar/3.jpg',
  },
  {
    DateTime: "Doctor's Appointment",
    Alert: 'My appointment for the doctor was rescheduled for next Saturday.',
    Person: '/static/images/avatar/4.jpg',
  },
  {
    DateTime: 'Discussion',
    Alert: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    Person: '/static/images/avatar/5.jpg',
  },
  {
    DateTime: 'Summer BBQ',
    Alert: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    Person: '/static/images/avatar/1.jpg',
  },
];
